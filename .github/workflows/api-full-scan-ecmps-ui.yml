name: "ECMPS UI Full ZAP Scan with Authentication"

on:
  workflow_dispatch:
    inputs:
      appurl:
        description: 'The home page URL of the React app (unauthenticated URL)'
        required: true
        default: 'https://ecmps-perf.app.cloud.gov/'
      userID:
        description: 'The user ID for login (optional, defaults to GitHub secret). CDX Bypass must be ON'
        required: false
      zapscanpolicy:
        description: 'The ZAP scan policy to use'
        required: true
        type: choice
        options:
          - 'Default Policy'
          - 'St-Ins-Th-Low'
          - 'St-Ins-Th-Med'
          - 'St-Ins-Th-High'
          - 'St-High-Th-Low'
          - 'St-High-Th-Med'
          - 'St-High-Th-High'
          - 'St-Medium-Th-Low'
          - 'St-Medium-Th-Med'
          - 'St-Medium-Th-High'
          - 'St-Low-Th-Low'
          - 'St-Low-Th-Med'
          - 'St-Low-Th-High'

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Determine UserID and Update URL
      - name: Determine UserID and Update App URL
        id: determine_userid
        run: |
          if [ -n "${{ github.event.inputs.userID }}" ]; then
            echo "USER_ID=${{ github.event.inputs.userID }}" >> $GITHUB_ENV
            echo "UPDATED_URL=${{ github.event.inputs.appurl }}?sessionId=${{ github.event.inputs.userID }}" >> $GITHUB_ENV
          else
            echo "USER_ID=${{ secrets.SCAN_USER_ID }}" >> $GITHUB_ENV
            echo "UPDATED_URL=${{ github.event.inputs.appurl }}?sessionId=${{ secrets.SCAN_USER_ID }}" >> $GITHUB_ENV
          fi

      # 3. Echo Input Parameters
      - name: Echo Input Parameters
        run: |
          echo "Original App URL: ${{ github.event.inputs.appurl }}"
          echo "Updated App URL: ${{ env.UPDATED_URL }}"
          echo "Scan Policy: ${{ github.event.inputs.zapscanpolicy }}"
          echo "UserID: ${{ env.USER_ID }}"

      # 4. Replace '<<policy>>' in the api_scan.py File
      - name: Replace '<<policy>>' in the api_scan.py file
        run: sed -i "s/<<policy>>/${{ github.event.inputs.zapscanpolicy }}/g" scan-hooks/api_scan.py

      # 5. Run ZAP Scan
      - name: Run ZAP Scan with AJAX Spider
        uses: zaproxy/action-full-scan@v0.12.0
        env:
          X_API_KEY: ${{ secrets.OWASP_ZAP_SCAN_API_KEY }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ env.UPDATED_URL }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:latest'
          allow_issue_writing: 'false'
          rules_file_name: 'rules.tsv'
          cmd_options: >
            -a -d
            --hook=scan-hooks/api_scan.py
            -z "
            -config replacer.full_list\(0\).description=x-api-key
            -config replacer.full_list\(0\).enabled=true
            -config replacer.full_list\(0\).matchtype=REQ_HEADER
            -config replacer.full_list\(0\).matchstr=x-api-key
            -config replacer.full_list\(0\).regex=false
            -config replacer.full_list\(0\).replacement=${{ secrets.OWASP_ZAP_SCAN_API_KEY }}
            -config ajaxSpider.maxDuration=3600
            -config ajaxSpider.browserId=0
            -config ajaxSpider.clickDefaultElems=true
            -config spider.maxDepth=5
            "
